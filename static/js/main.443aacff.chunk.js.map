{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/StatisticsItem/StatisticsItem.module.css","components/Section/Section.module.css","App.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Feedback/Feedback.js","components/StatisticsItem/StatisticsItem.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","props","title","children","className","s","container","FeedbackOptions","onLeaveFeedback","listButtons","listItem","button","onClick","Feedback","StatisticsItem","name","value","isPercent","itemTitle","itemValue","defaultProps","Notification","message","Statistics","good","neutral","bad","total","percent","App","state","increment","type","setState","prevState","console","log","Object","values","this","reduce","acc","Math","floor","countTotalFeedback","countPositiveFeedbackPercentage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.443aacff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listButtons\":\"FeedbackOptions_listButtons__9MO9u\",\"listItem\":\"FeedbackOptions_listItem__3rxMg\",\"button\":\"FeedbackOptions_button__15RG1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"StatisticsItem_listItem__3tPGT\",\"itemTitle\":\"StatisticsItem_itemTitle__NpQF4\",\"itemValue\":\"StatisticsItem_itemValue__3d7Jt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__E5Ty5\",\"title\":\"Section_title__2_G44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3n5eN\"};","import { Children } from 'react'\r\nimport s from './Section.module.css'\r\n\r\nconst Section = props => {\r\n    const { title, children } = props;\r\n    return(\r\n        <div className={s.container}>\r\n            <span className={s.title}>{title}</span>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section","import PropTypes from 'prop-types'\r\nimport s from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({onLeaveFeedback}) => {\r\n    return(\r\n        <ul className={s.listButtons}>\r\n            <li className={s.listItem}>\r\n                <button className={s.button} onClick={() => onLeaveFeedback('good')}>\r\n                    Good\r\n                </button>\r\n            </li>\r\n            <li className={s.listItem}>\r\n                <button className={s.button} onClick={() => onLeaveFeedback('neutral')}>\r\n                    Neutral\r\n                </button>\r\n            </li>\r\n            <li className={s.listItem}>\r\n                <button className={s.button} onClick={() => onLeaveFeedback('bad')}>\r\n                    Bad\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default FeedbackOptions\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func\r\n}","import PropTypes from 'prop-types'\n\nimport Section from '../Section'\nimport FeedbackOptions from '../FeedbackOptions'\n\nconst Feedback = ({ onLeaveFeedback }) => {\n  return (\n    <Section title=\"Feedback\">\n      <FeedbackOptions\n        onLeaveFeedback={onLeaveFeedback}\n      />\n    </Section>\n  );\n};\n\nexport default Feedback;\n\nFeedback.propTypes = {\n  onLeaveFeedback: PropTypes.func\n}","import PropTypes from 'prop-types'\r\nimport s from './StatisticsItem.module.css'\r\n\r\nconst StatisticsItem = props => {\r\n    const {name, value, isPercent} = props\r\n    return (\r\n        <li className={s.listItem}>\r\n            <span className={s.itemTitle}>{name}:</span>\r\n            <span className={s.itemValue}>{value} {isPercent ? '%' : null}</span>\r\n        </li>\r\n    )\r\n}\r\n\r\nStatisticsItem.defaultProps = {\r\n    value: 0,\r\n    isPercent: false\r\n};\r\n\r\nexport default StatisticsItem\r\n\r\nStatisticsItem.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.number,\r\n    isPercent: PropTypes.bool\r\n}","import PropTypes from 'prop-types'\r\n\r\nconst Notification = ({message}) => {\r\n    return (\r\n        <h2>{message}</h2>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string\r\n}","import PropTypes from 'prop-types'\n\nimport Section from '../Section'\nimport StatisticsItem from '../StatisticsItem'\nimport Notification from '../Notification'\n\nconst Statistics = ({ good, neutral, bad, total, percent }) => {\n  return (\n      <Section title=\"Statistics\">\n        {\n          total\n          ?\n            <ul>\n              <StatisticsItem name=\"Good\" value={good} />\n              <StatisticsItem name=\"Neutral\" value={neutral} />\n              <StatisticsItem name=\"Bad\" value={bad} />\n              <StatisticsItem name=\"Total\" value={total} />\n              <StatisticsItem name=\"Positive feedback\" value={percent} isPercent={true}/>\n            </ul>\n          :\n            <Notification message=\"No feedback given\" />\n        }\n      </Section>\n  );\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  percent: PropTypes.number\n}","import { Component } from 'react';\n\nimport Feedback from './components/Feedback';\nimport Statistics from './components/Statistics';\n\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  increment = type => {\n    switch (type) {\n      case 'good':\n        this.setState(prevState => ({ good: prevState.good + 1 }));\n        break;\n      case 'neutral':\n        this.setState(prevState => ({ neutral: prevState.neutral + 1 }));\n        break;\n      case 'bad':\n        this.setState(prevState => ({ bad: prevState.bad + 1 }));\n        break;\n      default:\n        console.log('Criminal value! =)');\n        break;\n    }\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, value) => {\n      return acc + value;\n    }, 0);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n  }\n\n  render() {\n    const {good, neutral, bad} = this.state\n    return (\n      <div className={s.App}>\n        <Feedback onLeaveFeedback={this.increment} />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={this.countTotalFeedback()}\n          percent={this.countPositiveFeedbackPercentage()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}